# EEGuizhi
# 因為這題比較難想 所以先用白話文作為更高階的語言寫出來 規劃程式的走向 之後再用verilog寫出來

string: _ _ _ _ _ _ ... _ _ _
pattern: _ _ _ _ _ _ _ _

match_index: 當前在str中跟pat比對的頭 

if: state = 0 (輸入):
{
    if: is string
    {
        str_ptr逐加 存入str[str_ptr]
    }
    else if: is pattern
    {
        pat_ptr逐加 存入pat[pat_ptr]
    }
    else: 準備進入下一state
    {
        str_ptr, pat_ptr歸零
    }
}
else if: state = 1 (計算):

    if: 當前在str中的位置到尾巴的長度足夠塞下pat
    {
        if: 目前在str中的字跟pat中的字一樣
        {
            str, pat皆往下一格比對
            flag 立起來
        }
        else if: pat的字是"^"
        {
            if: str的字是開頭
            {
                str的字不動, pat的字往後一格
                flag 收起來
            }
            else:
            {
                移動match_index到下一格重新比對  
                flag 收起來   
            }
        }
        else if: pat的字是"$"
        {
            if: 上一格str的字是結尾
            {
                flag 立起來
            }
            else:
            {
                移動match_index到下一格重新比對
                flag 收起來
            }
        }
        else if: pat的字是"."
        {
            str, pat皆往下一格比對
            flag 立起來
        }
        else:
        {
            移動match_index到下一格重新比對
            flag 收起來
        }

        if: flag立起來 而且pat在最後一個字
        {
            success (next state)
        }
    }
    else:
    {
        failed (next state)
    }
